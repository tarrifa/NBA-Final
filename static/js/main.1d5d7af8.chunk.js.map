{"version":3,"sources":["nba.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","info","setInfo","message","setMessage","heights","useEffect","axios","get","then","res","values","Container","fluid","className","Row","Col","xs","md","Image","src","logo","rounded","height","onSubmit","e","preventDefault","i","length","val","parseInt","h_in","j","push","first_name","concat","last_name","players","k","toString","console","log","value","onChange","event","target","name","type","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,G,MAAA,IAA0B,iC,OCgF1BA,MAtEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,mBAAS,KAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAU,GAkChB,OAhCAC,qBAAU,WACRC,IAAMC,IAAI,wCAAwCC,MAAK,SAACC,GACtDV,EAAQU,EAAIX,KAAKY,aAElB,IA6BH,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,UAA3B,UACE,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAACC,EAAA,EAAD,CAAOC,IAAKC,EAAMC,SAAO,EAACC,OAAO,cAGjC,cAACR,EAAA,EAAD,UACA,uBAAMS,SAlCW,SAACC,GACpBA,EAAEC,iBACF,IAAI,IAAIC,EAAI,EAAGA,EAAE5B,EAAK6B,OAAOD,IAAI,CAC/B,IAAIE,EAAM5B,EAAO6B,SAAS/B,EAAK4B,GAAGI,MAClC,GAAGF,EAAI,EACL,IAAI,IAAIG,EAAIL,EAAE,EAAGK,EAAGjC,EAAK6B,OAAOI,IAC3BH,IAAQC,SAAU/B,EAAKiC,GAAGD,OAASJ,IAAMK,GAC1C3B,EAAQ4B,KAAK,CAAClC,EAAK4B,GAAGO,WAAWC,OAAQ,IAAIpC,EAAK4B,GAAGS,WAAarC,EAAKiC,GAAGE,WAAWC,OAAQ,IAAIpC,EAAKiC,GAAGI,aAMjH,GAAsB,IAAnB/B,EAAQuB,OACTxB,EAAW,wBACR,CAEH,IADA,IAAIiC,EAAU,GACNC,EAAI,EAAGA,EAAGjC,EAAQuB,OAAOU,IAC/BD,EAAUA,EAAQF,OAAO9B,EAAQiC,GAAGC,WAAY,MAEnDC,QAAQC,IAAIJ,GACXjC,EAAWiC,KAaX,UACA,4EAEE,uBACA,uBACEK,MAAOzC,EACP0C,SAAU,SAAAC,GAAK,OAAI1C,EAAQ0C,EAAMC,OAAOH,QACxCI,KAAK,OACLC,KAAK,cAGT,uBACA,cAACC,EAAA,EAAD,CAAQD,KAAK,SAASjC,UAAW,SAAjC,yBAIA,cAACC,EAAA,EAAD,CAAKD,UAAU,SAAf,SACCX,EAAQyB,OAAQ,GAAK,8BAAMzB,UC7DnB8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1d5d7af8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nba.7f1a3ad6.png\";","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport logo from './nba.png';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [info, setInfo] = useState('');\n  const [message, setMessage] = useState(\" \");\n  const heights = [];\n\n  useEffect(() => {\n    axios.get('https://mach-eight.uc.r.appspot.com/').then((res) =>{\n      setData(res.data.values);\n  });\n  }, [])\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    for(var i = 0; i<data.length;i++){\n      var val = info - parseInt(data[i].h_in);\n      if(val>0){\n        for(var j = i+1; j< data.length;j++){\n          if(val === parseInt( data[j].h_in) && i !== j){\n            heights.push([data[i].first_name.concat( ' ',data[i].last_name ), data[j].first_name.concat( ' ',data[j].last_name )]);\n          } \n        }\n      }\n    }\n\n    if(heights.length === 0){\n      setMessage(\"No matches found\")\n    }else{\n      let players = '';\n      for(var k = 0; k< heights.length;k++){\n        players = players.concat(heights[k].toString(), '\\n')\n      }\n     console.log(players)\n      setMessage(players)\n    }\n    \n  };\n\n  return (\n  <Container fluid className=\"content\">\n    <Row>\n    <Col xs={6} md={4}>\n      <Image src={logo} rounded height=\"100px\"/>\n    </Col>\n    </Row>\n      <Row>\n      <form onSubmit={handleChange}>\n      <label>\n        PLEASE ENTER THE DESIRED SUM OF HEIGHTS\n        <br/>\n        <input\n          value={info}\n          onChange={event => setInfo(event.target.value)}\n          name=\"info\"\n          type=\"number\"\n        />\n      </label>\n      <br/>\n      <Button type=\"submit\" className= \"button\">SUBMIT</Button>\n    </form>\n    \n      </Row>\n      <Row className=\"answer\">\n      {message.length >0 && <div>{message}</div>}\n      </Row>\n  </Container>\n);\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}